
services:
  gateway:
    build:
      context: ./gateway
    image: gateway-app
    container_name: gateway-app
    environment:
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
    depends_on:
      - consul
    ports:
      - "8100:8100"
    networks:
      - pokemon-network

  consul:
      image: hashicorp/consul:latest
      container_name: consul
      ports:
        - "8500:8500"
      command: "agent -server -bootstrap-expect=1 -ui -client=0.0.0.0"
      networks:
        - pokemon-network

  booster-pack:
    build:
      context: ./boosterpack
    image: booster-pack-app
    container_name: booster-pack-app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://pokemon-db:5432/pokemondb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
    depends_on:
      - pokemon-db
      - rabbitmq
      - consul


    ports:
      - "8082:8082"
    networks:
      - pokemon-network

  user:
    build:
      context: ./user
    image: user-app
    container_name: user-app
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://pokemon-db:5432/pokemondb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
    depends_on:
      - pokemon-db
      - booster-pack
      - rabbitmq
    ports:
      - "8081:8081"
    networks:
      - pokemon-network

  frontend:
    build:
      context: ./frontend
    image: frontend-app
    container_name: frontend-app
    ports:
      - "5173:5173"
    depends_on:
      - gateway
    networks:
      - pokemon-network

  pokemon-db:
    image: postgres:latest
    container_name: pokemon-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=pokemondb
    volumes:
      - pokemon-data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d pokemondb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pokemon-network
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - pokemon-network

volumes:
  pokemon-data:
  rabbitmq-data:

networks:
  pokemon-network:
    driver: bridge